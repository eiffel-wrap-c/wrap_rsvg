note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"
-- functions wrapper
class CAIRO_FUNCTIONS_API


feature -- Access

	cairo_create (target: CAIRO_SURFACE_STRUCT_API): detachable CAIRO_STRUCT_API 
		do
			if attached c_cairo_create (target.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	cairo_destroy (cr: CAIRO_STRUCT_API) 
		do
			c_cairo_destroy (cr.item)
		ensure
			instance_free: class
		end

	cairo_status (cr: CAIRO_STRUCT_API): INTEGER 
		do
			Result := c_cairo_status (cr.item)
		ensure
			instance_free: class
		end

	cairo_status_to_string (status: INTEGER): POINTER 
		do
			Result := c_cairo_status_to_string (status)
		ensure
			instance_free: class
		end

	cairo_surface_create_similar (other: CAIRO_SURFACE_STRUCT_API; content: INTEGER; width: INTEGER; height: INTEGER): detachable CAIRO_SURFACE_STRUCT_API 
		do
			if attached c_cairo_surface_create_similar (other.item, content, width, height) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	cairo_surface_create_similar_image (other: CAIRO_SURFACE_STRUCT_API; format: INTEGER; width: INTEGER; height: INTEGER): detachable CAIRO_SURFACE_STRUCT_API 
		do
			if attached c_cairo_surface_create_similar_image (other.item, format, width, height) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	cairo_surface_map_to_image (surface: CAIRO_SURFACE_STRUCT_API; extents: CAIRO_RECTANGLE_INT_STRUCT_API): detachable CAIRO_SURFACE_STRUCT_API 
		do
			if attached c_cairo_surface_map_to_image (surface.item, extents.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	cairo_surface_unmap_image (surface: CAIRO_SURFACE_STRUCT_API; image: CAIRO_SURFACE_STRUCT_API) 
		do
			c_cairo_surface_unmap_image (surface.item, image.item)
		ensure
			instance_free: class
		end

	cairo_surface_create_for_rectangle (target: CAIRO_SURFACE_STRUCT_API; x: REAL_64; y: REAL_64; width: REAL_64; height: REAL_64): detachable CAIRO_SURFACE_STRUCT_API 
		do
			if attached c_cairo_surface_create_for_rectangle (target.item, x, y, width, height) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	cairo_surface_create_observer (target: CAIRO_SURFACE_STRUCT_API; mode: INTEGER): detachable CAIRO_SURFACE_STRUCT_API 
		do
			if attached c_cairo_surface_create_observer (target.item, mode) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	cairo_surface_observer_add_paint_callback (abstract_surface: CAIRO_SURFACE_STRUCT_API; func: POINTER; data: POINTER): INTEGER 
		do
			Result := c_cairo_surface_observer_add_paint_callback (abstract_surface.item, func, data)
		ensure
			instance_free: class
		end

	cairo_surface_observer_add_mask_callback (abstract_surface: CAIRO_SURFACE_STRUCT_API; func: POINTER; data: POINTER): INTEGER 
		do
			Result := c_cairo_surface_observer_add_mask_callback (abstract_surface.item, func, data)
		ensure
			instance_free: class
		end

	cairo_surface_observer_add_fill_callback (abstract_surface: CAIRO_SURFACE_STRUCT_API; func: POINTER; data: POINTER): INTEGER 
		do
			Result := c_cairo_surface_observer_add_fill_callback (abstract_surface.item, func, data)
		ensure
			instance_free: class
		end

	cairo_surface_observer_add_stroke_callback (abstract_surface: CAIRO_SURFACE_STRUCT_API; func: POINTER; data: POINTER): INTEGER 
		do
			Result := c_cairo_surface_observer_add_stroke_callback (abstract_surface.item, func, data)
		ensure
			instance_free: class
		end

	cairo_surface_observer_add_glyphs_callback (abstract_surface: CAIRO_SURFACE_STRUCT_API; func: POINTER; data: POINTER): INTEGER 
		do
			Result := c_cairo_surface_observer_add_glyphs_callback (abstract_surface.item, func, data)
		ensure
			instance_free: class
		end

	cairo_surface_observer_add_flush_callback (abstract_surface: CAIRO_SURFACE_STRUCT_API; func: POINTER; data: POINTER): INTEGER 
		do
			Result := c_cairo_surface_observer_add_flush_callback (abstract_surface.item, func, data)
		ensure
			instance_free: class
		end

	cairo_surface_observer_add_finish_callback (abstract_surface: CAIRO_SURFACE_STRUCT_API; func: POINTER; data: POINTER): INTEGER 
		do
			Result := c_cairo_surface_observer_add_finish_callback (abstract_surface.item, func, data)
		ensure
			instance_free: class
		end

	cairo_surface_observer_print (surface: CAIRO_SURFACE_STRUCT_API; write_func: POINTER; closure: POINTER): INTEGER 
		do
			Result := c_cairo_surface_observer_print (surface.item, write_func, closure)
		ensure
			instance_free: class
		end

	cairo_surface_observer_elapsed (surface: CAIRO_SURFACE_STRUCT_API): REAL_64 
		do
			Result := c_cairo_surface_observer_elapsed (surface.item)
		ensure
			instance_free: class
		end

	cairo_surface_reference (surface: CAIRO_SURFACE_STRUCT_API): detachable CAIRO_SURFACE_STRUCT_API 
		do
			if attached c_cairo_surface_reference (surface.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	cairo_surface_finish (surface: CAIRO_SURFACE_STRUCT_API) 
		do
			c_cairo_surface_finish (surface.item)
		ensure
			instance_free: class
		end

	cairo_surface_destroy (surface: CAIRO_SURFACE_STRUCT_API) 
		do
			c_cairo_surface_destroy (surface.item)
		ensure
			instance_free: class
		end

	cairo_surface_get_device (surface: CAIRO_SURFACE_STRUCT_API): detachable CAIRO_DEVICE_STRUCT_API 
		do
			if attached c_cairo_surface_get_device (surface.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	cairo_surface_get_reference_count (surface: CAIRO_SURFACE_STRUCT_API): INTEGER 
		do
			Result := c_cairo_surface_get_reference_count (surface.item)
		ensure
			instance_free: class
		end

	cairo_surface_status (surface: CAIRO_SURFACE_STRUCT_API): INTEGER 
		do
			Result := c_cairo_surface_status (surface.item)
		ensure
			instance_free: class
		end

	cairo_surface_get_type (surface: CAIRO_SURFACE_STRUCT_API): INTEGER 
		do
			Result := c_cairo_surface_get_type (surface.item)
		ensure
			instance_free: class
		end

	cairo_surface_get_content (surface: CAIRO_SURFACE_STRUCT_API): INTEGER 
		do
			Result := c_cairo_surface_get_content (surface.item)
		ensure
			instance_free: class
		end

	cairo_surface_write_to_png (surface: CAIRO_SURFACE_STRUCT_API; filename: STRING_8): INTEGER 
		local
			filename_c_string: C_STRING
		do
			create filename_c_string.make (filename)
			Result := c_cairo_surface_write_to_png (surface.item, filename_c_string.item)
		ensure
			instance_free: class
		end

	cairo_surface_write_to_png_stream (surface: CAIRO_SURFACE_STRUCT_API; write_func: POINTER; closure: POINTER): INTEGER 
		do
			Result := c_cairo_surface_write_to_png_stream (surface.item, write_func, closure)
		ensure
			instance_free: class
		end

	cairo_surface_get_user_data (surface: CAIRO_SURFACE_STRUCT_API; key: CAIRO_USER_DATA_KEY_STRUCT_API): POINTER 
		do
			Result := c_cairo_surface_get_user_data (surface.item, key.item)
		ensure
			instance_free: class
		end

	cairo_surface_set_user_data (surface: CAIRO_SURFACE_STRUCT_API; key: CAIRO_USER_DATA_KEY_STRUCT_API; user_data: POINTER; destroy: POINTER): INTEGER 
		do
			Result := c_cairo_surface_set_user_data (surface.item, key.item, user_data, destroy)
		ensure
			instance_free: class
		end

	cairo_surface_get_mime_data (surface: CAIRO_SURFACE_STRUCT_API; mime_type: STRING_8; data: POINTER; length: POINTER) 
		local
			mime_type_c_string: C_STRING
		do
			create mime_type_c_string.make (mime_type)
			c_cairo_surface_get_mime_data (surface.item, mime_type_c_string.item, data, length)
		ensure
			instance_free: class
		end

	cairo_surface_set_mime_data (surface: CAIRO_SURFACE_STRUCT_API; mime_type: STRING_8; data: STRING_8; length: INTEGER; destroy: POINTER; closure: POINTER): INTEGER 
		local
			mime_type_c_string: C_STRING
			data_c_string: C_STRING
		do
			create mime_type_c_string.make (mime_type)
			create data_c_string.make (data)
			Result := c_cairo_surface_set_mime_data (surface.item, mime_type_c_string.item, data_c_string.item, length, destroy, closure)
		ensure
			instance_free: class
		end

	cairo_surface_supports_mime_type (surface: CAIRO_SURFACE_STRUCT_API; mime_type: STRING_8): INTEGER 
		local
			mime_type_c_string: C_STRING
		do
			create mime_type_c_string.make (mime_type)
			Result := c_cairo_surface_supports_mime_type (surface.item, mime_type_c_string.item)
		ensure
			instance_free: class
		end

	cairo_surface_get_font_options (surface: CAIRO_SURFACE_STRUCT_API; options: CAIRO_FONT_OPTIONS_STRUCT_API) 
		do
			c_cairo_surface_get_font_options (surface.item, options.item)
		ensure
			instance_free: class
		end

	cairo_surface_flush (surface: CAIRO_SURFACE_STRUCT_API) 
		do
			c_cairo_surface_flush (surface.item)
		ensure
			instance_free: class
		end

	cairo_surface_mark_dirty (surface: CAIRO_SURFACE_STRUCT_API) 
		do
			c_cairo_surface_mark_dirty (surface.item)
		ensure
			instance_free: class
		end

	cairo_surface_mark_dirty_rectangle (surface: CAIRO_SURFACE_STRUCT_API; x: INTEGER; y: INTEGER; width: INTEGER; height: INTEGER) 
		do
			c_cairo_surface_mark_dirty_rectangle (surface.item, x, y, width, height)
		ensure
			instance_free: class
		end

	cairo_surface_set_device_scale (surface: CAIRO_SURFACE_STRUCT_API; x_scale: REAL_64; y_scale: REAL_64) 
		do
			c_cairo_surface_set_device_scale (surface.item, x_scale, y_scale)
		ensure
			instance_free: class
		end

	cairo_surface_get_device_scale (surface: CAIRO_SURFACE_STRUCT_API; x_scale: POINTER; y_scale: POINTER) 
		do
			c_cairo_surface_get_device_scale (surface.item, x_scale, y_scale)
		ensure
			instance_free: class
		end

	cairo_surface_set_device_offset (surface: CAIRO_SURFACE_STRUCT_API; x_offset: REAL_64; y_offset: REAL_64) 
		do
			c_cairo_surface_set_device_offset (surface.item, x_offset, y_offset)
		ensure
			instance_free: class
		end

	cairo_surface_get_device_offset (surface: CAIRO_SURFACE_STRUCT_API; x_offset: POINTER; y_offset: POINTER) 
		do
			c_cairo_surface_get_device_offset (surface.item, x_offset, y_offset)
		ensure
			instance_free: class
		end

	cairo_surface_set_fallback_resolution (surface: CAIRO_SURFACE_STRUCT_API; x_pixels_per_inch: REAL_64; y_pixels_per_inch: REAL_64) 
		do
			c_cairo_surface_set_fallback_resolution (surface.item, x_pixels_per_inch, y_pixels_per_inch)
		ensure
			instance_free: class
		end

	cairo_surface_get_fallback_resolution (surface: CAIRO_SURFACE_STRUCT_API; x_pixels_per_inch: POINTER; y_pixels_per_inch: POINTER) 
		do
			c_cairo_surface_get_fallback_resolution (surface.item, x_pixels_per_inch, y_pixels_per_inch)
		ensure
			instance_free: class
		end

	cairo_surface_copy_page (surface: CAIRO_SURFACE_STRUCT_API) 
		do
			c_cairo_surface_copy_page (surface.item)
		ensure
			instance_free: class
		end

	cairo_surface_show_page (surface: CAIRO_SURFACE_STRUCT_API) 
		do
			c_cairo_surface_show_page (surface.item)
		ensure
			instance_free: class
		end

	cairo_surface_has_show_text_glyphs (surface: CAIRO_SURFACE_STRUCT_API): INTEGER 
		do
			Result := c_cairo_surface_has_show_text_glyphs (surface.item)
		ensure
			instance_free: class
		end

	cairo_image_surface_create (format: INTEGER; width: INTEGER; height: INTEGER): detachable CAIRO_SURFACE_STRUCT_API 
		do
			if attached c_cairo_image_surface_create (format, width, height) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	cairo_image_surface_create_for_data (data: STRING_8; format: INTEGER; width: INTEGER; height: INTEGER; stride: INTEGER): detachable CAIRO_SURFACE_STRUCT_API 
		local
			data_c_string: C_STRING
		do
			create data_c_string.make (data)
			if attached c_cairo_image_surface_create_for_data (data_c_string.item, format, width, height, stride) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	cairo_image_surface_get_data (surface: CAIRO_SURFACE_STRUCT_API): POINTER 
		do
			Result := c_cairo_image_surface_get_data (surface.item)
		ensure
			instance_free: class
		end

	cairo_image_surface_get_format (surface: CAIRO_SURFACE_STRUCT_API): INTEGER 
		do
			Result := c_cairo_image_surface_get_format (surface.item)
		ensure
			instance_free: class
		end

	cairo_image_surface_get_width (surface: CAIRO_SURFACE_STRUCT_API): INTEGER 
		do
			Result := c_cairo_image_surface_get_width (surface.item)
		ensure
			instance_free: class
		end

	cairo_image_surface_get_height (surface: CAIRO_SURFACE_STRUCT_API): INTEGER 
		do
			Result := c_cairo_image_surface_get_height (surface.item)
		ensure
			instance_free: class
		end

	cairo_image_surface_get_stride (surface: CAIRO_SURFACE_STRUCT_API): INTEGER 
		do
			Result := c_cairo_image_surface_get_stride (surface.item)
		ensure
			instance_free: class
		end

	cairo_image_surface_create_from_png (filename: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_image_surface_create_from_png ((char const*)$filename);
			]"
		end

	cairo_image_surface_create_from_png_stream (read_func: POINTER; closure: POINTER): detachable CAIRO_SURFACE_STRUCT_API 
		do
			if attached c_cairo_image_surface_create_from_png_stream (read_func, closure) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

feature -- Externals

	c_cairo_create (target: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_create ((cairo_surface_t*)$target);
			]"
		end

	c_cairo_destroy (cr: POINTER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				cairo_destroy ((cairo_t*)$cr);
			]"
		end

	c_cairo_status (cr: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_status ((cairo_t*)$cr);
			]"
		end

	c_cairo_status_to_string (status: INTEGER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_status_to_string ((cairo_status_t)$status);
			]"
		end

	c_cairo_surface_create_similar (other: POINTER; content: INTEGER; width: INTEGER; height: INTEGER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_create_similar ((cairo_surface_t*)$other, (cairo_content_t)$content, (int)$width, (int)$height);
			]"
		end

	c_cairo_surface_create_similar_image (other: POINTER; format: INTEGER; width: INTEGER; height: INTEGER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_create_similar_image ((cairo_surface_t*)$other, (cairo_format_t)$format, (int)$width, (int)$height);
			]"
		end

	c_cairo_surface_map_to_image (surface: POINTER; extents: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_map_to_image ((cairo_surface_t*)$surface, (cairo_rectangle_int_t const*)$extents);
			]"
		end

	c_cairo_surface_unmap_image (surface: POINTER; image: POINTER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				cairo_surface_unmap_image ((cairo_surface_t*)$surface, (cairo_surface_t*)$image);
			]"
		end

	c_cairo_surface_create_for_rectangle (target: POINTER; x: REAL_64; y: REAL_64; width: REAL_64; height: REAL_64): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_create_for_rectangle ((cairo_surface_t*)$target, (double)$x, (double)$y, (double)$width, (double)$height);
			]"
		end

	c_cairo_surface_create_observer (target: POINTER; mode: INTEGER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_create_observer ((cairo_surface_t*)$target, (cairo_surface_observer_mode_t)$mode);
			]"
		end

	c_cairo_surface_observer_add_paint_callback (abstract_surface: POINTER; func: POINTER; data: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_observer_add_paint_callback ((cairo_surface_t*)$abstract_surface, (cairo_surface_observer_callback_t)$func, (void*)$data);
			]"
		end

	c_cairo_surface_observer_add_mask_callback (abstract_surface: POINTER; func: POINTER; data: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_observer_add_mask_callback ((cairo_surface_t*)$abstract_surface, (cairo_surface_observer_callback_t)$func, (void*)$data);
			]"
		end

	c_cairo_surface_observer_add_fill_callback (abstract_surface: POINTER; func: POINTER; data: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_observer_add_fill_callback ((cairo_surface_t*)$abstract_surface, (cairo_surface_observer_callback_t)$func, (void*)$data);
			]"
		end

	c_cairo_surface_observer_add_stroke_callback (abstract_surface: POINTER; func: POINTER; data: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_observer_add_stroke_callback ((cairo_surface_t*)$abstract_surface, (cairo_surface_observer_callback_t)$func, (void*)$data);
			]"
		end

	c_cairo_surface_observer_add_glyphs_callback (abstract_surface: POINTER; func: POINTER; data: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_observer_add_glyphs_callback ((cairo_surface_t*)$abstract_surface, (cairo_surface_observer_callback_t)$func, (void*)$data);
			]"
		end

	c_cairo_surface_observer_add_flush_callback (abstract_surface: POINTER; func: POINTER; data: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_observer_add_flush_callback ((cairo_surface_t*)$abstract_surface, (cairo_surface_observer_callback_t)$func, (void*)$data);
			]"
		end

	c_cairo_surface_observer_add_finish_callback (abstract_surface: POINTER; func: POINTER; data: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_observer_add_finish_callback ((cairo_surface_t*)$abstract_surface, (cairo_surface_observer_callback_t)$func, (void*)$data);
			]"
		end

	c_cairo_surface_observer_print (surface: POINTER; write_func: POINTER; closure: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_observer_print ((cairo_surface_t*)$surface, (cairo_write_func_t)$write_func, (void*)$closure);
			]"
		end

	c_cairo_surface_observer_elapsed (surface: POINTER): REAL_64
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_observer_elapsed ((cairo_surface_t*)$surface);
			]"
		end

	c_cairo_surface_reference (surface: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_reference ((cairo_surface_t*)$surface);
			]"
		end

	c_cairo_surface_finish (surface: POINTER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				cairo_surface_finish ((cairo_surface_t*)$surface);
			]"
		end

	c_cairo_surface_destroy (surface: POINTER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				cairo_surface_destroy ((cairo_surface_t*)$surface);
			]"
		end

	c_cairo_surface_get_device (surface: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_get_device ((cairo_surface_t*)$surface);
			]"
		end

	c_cairo_surface_get_reference_count (surface: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_get_reference_count ((cairo_surface_t*)$surface);
			]"
		end

	c_cairo_surface_status (surface: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_status ((cairo_surface_t*)$surface);
			]"
		end

	c_cairo_surface_get_type (surface: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_get_type ((cairo_surface_t*)$surface);
			]"
		end

	c_cairo_surface_get_content (surface: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_get_content ((cairo_surface_t*)$surface);
			]"
		end

	c_cairo_surface_write_to_png (surface: POINTER; filename: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_write_to_png ((cairo_surface_t*)$surface, (char const*)$filename);
			]"
		end

	c_cairo_surface_write_to_png_stream (surface: POINTER; write_func: POINTER; closure: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_write_to_png_stream ((cairo_surface_t*)$surface, (cairo_write_func_t)$write_func, (void*)$closure);
			]"
		end

	c_cairo_surface_get_user_data (surface: POINTER; key: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_get_user_data ((cairo_surface_t*)$surface, (cairo_user_data_key_t const*)$key);
			]"
		end

	c_cairo_surface_set_user_data (surface: POINTER; key: POINTER; user_data: POINTER; destroy: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_set_user_data ((cairo_surface_t*)$surface, (cairo_user_data_key_t const*)$key, (void*)$user_data, (cairo_destroy_func_t)$destroy);
			]"
		end

	c_cairo_surface_get_mime_data (surface: POINTER; mime_type: POINTER; data: POINTER; length: POINTER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				cairo_surface_get_mime_data ((cairo_surface_t*)$surface, (char const*)$mime_type, (unsigned char const**)$data, (unsigned long*)$length);
			]"
		end

	c_cairo_surface_set_mime_data (surface: POINTER; mime_type: POINTER; data: POINTER; length: INTEGER; destroy: POINTER; closure: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_set_mime_data ((cairo_surface_t*)$surface, (char const*)$mime_type, (unsigned char const*)$data, (unsigned long)$length, (cairo_destroy_func_t)$destroy, (void*)$closure);
			]"
		end

	c_cairo_surface_supports_mime_type (surface: POINTER; mime_type: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_supports_mime_type ((cairo_surface_t*)$surface, (char const*)$mime_type);
			]"
		end

	c_cairo_surface_get_font_options (surface: POINTER; options: POINTER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				cairo_surface_get_font_options ((cairo_surface_t*)$surface, (cairo_font_options_t*)$options);
			]"
		end

	c_cairo_surface_flush (surface: POINTER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				cairo_surface_flush ((cairo_surface_t*)$surface);
			]"
		end

	c_cairo_surface_mark_dirty (surface: POINTER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				cairo_surface_mark_dirty ((cairo_surface_t*)$surface);
			]"
		end

	c_cairo_surface_mark_dirty_rectangle (surface: POINTER; x: INTEGER; y: INTEGER; width: INTEGER; height: INTEGER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				cairo_surface_mark_dirty_rectangle ((cairo_surface_t*)$surface, (int)$x, (int)$y, (int)$width, (int)$height);
			]"
		end

	c_cairo_surface_set_device_scale (surface: POINTER; x_scale: REAL_64; y_scale: REAL_64)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				cairo_surface_set_device_scale ((cairo_surface_t*)$surface, (double)$x_scale, (double)$y_scale);
			]"
		end

	c_cairo_surface_get_device_scale (surface: POINTER; x_scale: POINTER; y_scale: POINTER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				cairo_surface_get_device_scale ((cairo_surface_t*)$surface, (double*)$x_scale, (double*)$y_scale);
			]"
		end

	c_cairo_surface_set_device_offset (surface: POINTER; x_offset: REAL_64; y_offset: REAL_64)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				cairo_surface_set_device_offset ((cairo_surface_t*)$surface, (double)$x_offset, (double)$y_offset);
			]"
		end

	c_cairo_surface_get_device_offset (surface: POINTER; x_offset: POINTER; y_offset: POINTER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				cairo_surface_get_device_offset ((cairo_surface_t*)$surface, (double*)$x_offset, (double*)$y_offset);
			]"
		end

	c_cairo_surface_set_fallback_resolution (surface: POINTER; x_pixels_per_inch: REAL_64; y_pixels_per_inch: REAL_64)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				cairo_surface_set_fallback_resolution ((cairo_surface_t*)$surface, (double)$x_pixels_per_inch, (double)$y_pixels_per_inch);
			]"
		end

	c_cairo_surface_get_fallback_resolution (surface: POINTER; x_pixels_per_inch: POINTER; y_pixels_per_inch: POINTER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				cairo_surface_get_fallback_resolution ((cairo_surface_t*)$surface, (double*)$x_pixels_per_inch, (double*)$y_pixels_per_inch);
			]"
		end

	c_cairo_surface_copy_page (surface: POINTER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				cairo_surface_copy_page ((cairo_surface_t*)$surface);
			]"
		end

	c_cairo_surface_show_page (surface: POINTER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				cairo_surface_show_page ((cairo_surface_t*)$surface);
			]"
		end

	c_cairo_surface_has_show_text_glyphs (surface: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_surface_has_show_text_glyphs ((cairo_surface_t*)$surface);
			]"
		end

	c_cairo_image_surface_create (format: INTEGER; width: INTEGER; height: INTEGER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_image_surface_create ((cairo_format_t)$format, (int)$width, (int)$height);
			]"
		end

	c_cairo_image_surface_create_for_data (data: POINTER; format: INTEGER; width: INTEGER; height: INTEGER; stride: INTEGER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_image_surface_create_for_data ((unsigned char*)$data, (cairo_format_t)$format, (int)$width, (int)$height, (int)$stride);
			]"
		end

	c_cairo_image_surface_get_data (surface: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_image_surface_get_data ((cairo_surface_t*)$surface);
			]"
		end

	c_cairo_image_surface_get_format (surface: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_image_surface_get_format ((cairo_surface_t*)$surface);
			]"
		end

	c_cairo_image_surface_get_width (surface: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_image_surface_get_width ((cairo_surface_t*)$surface);
			]"
		end

	c_cairo_image_surface_get_height (surface: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_image_surface_get_height ((cairo_surface_t*)$surface);
			]"
		end

	c_cairo_image_surface_get_stride (surface: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_image_surface_get_stride ((cairo_surface_t*)$surface);
			]"
		end

	c_cairo_image_surface_create_from_png_stream (read_func: POINTER; closure: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return cairo_image_surface_create_from_png_stream ((cairo_read_func_t)$read_func, (void*)$closure);
			]"
		end

feature -- Externals Address

end
