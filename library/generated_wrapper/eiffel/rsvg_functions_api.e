note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"
-- functions wrapper
class RSVG_FUNCTIONS_API


feature -- Access

	rsvg_handle_get_type: INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_get_type ();
			]"
		end

	rsvg_error_quark: INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_error_quark ();
			]"
		end

	rsvg_error_get_type: INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_error_get_type ();
			]"
		end

	rsvg_cleanup
		external
			"C inline use <rsvg.h>"
		alias
			"[
				rsvg_cleanup ();
			]"
		end

	rsvg_set_default_dpi (dpi: REAL_64)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				rsvg_set_default_dpi ((double)$dpi);
			]"
		end

	rsvg_set_default_dpi_x_y (dpi_x: REAL_64; dpi_y: REAL_64)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				rsvg_set_default_dpi_x_y ((double)$dpi_x, (double)$dpi_y);
			]"
		end

	rsvg_handle_set_dpi (handle: RSVG_HANDLE_STRUCT_API; dpi: REAL_64) 
		do
			c_rsvg_handle_set_dpi (handle.item, dpi)
		ensure
			instance_free: class
		end

	rsvg_handle_set_dpi_x_y (handle: RSVG_HANDLE_STRUCT_API; dpi_x: REAL_64; dpi_y: REAL_64) 
		do
			c_rsvg_handle_set_dpi_x_y (handle.item, dpi_x, dpi_y)
		ensure
			instance_free: class
		end

	rsvg_handle_new: detachable RSVG_HANDLE_STRUCT_API 
		do
			if attached c_rsvg_handle_new as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	rsvg_handle_write (handle: RSVG_HANDLE_STRUCT_API; buf: STRING_8; count: INTEGER; error: GERROR_STRUCT_API): INTEGER 
		local
			buf_c_string: C_STRING
		do
			create buf_c_string.make (buf)
			Result := c_rsvg_handle_write (handle.item, buf_c_string.item, count, error.item)
		ensure
			instance_free: class
		end

	rsvg_handle_close (handle: RSVG_HANDLE_STRUCT_API; error: GERROR_STRUCT_API): INTEGER 
		do
			Result := c_rsvg_handle_close (handle.item, error.item)
		ensure
			instance_free: class
		end

	rsvg_handle_get_pixbuf (handle: RSVG_HANDLE_STRUCT_API): detachable GDK_PIXBUF_STRUCT_API 
		do
			if attached c_rsvg_handle_get_pixbuf (handle.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	rsvg_handle_get_pixbuf_sub (handle: RSVG_HANDLE_STRUCT_API; id: STRING_8): detachable GDK_PIXBUF_STRUCT_API 
		local
			id_c_string: C_STRING
		do
			create id_c_string.make (id)
			if attached c_rsvg_handle_get_pixbuf_sub (handle.item, id_c_string.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	rsvg_handle_get_base_uri (handle: RSVG_HANDLE_STRUCT_API): POINTER 
		do
			Result := c_rsvg_handle_get_base_uri (handle.item)
		ensure
			instance_free: class
		end

	rsvg_handle_set_base_uri (handle: RSVG_HANDLE_STRUCT_API; base_uri: STRING_8) 
		local
			base_uri_c_string: C_STRING
		do
			create base_uri_c_string.make (base_uri)
			c_rsvg_handle_set_base_uri (handle.item, base_uri_c_string.item)
		ensure
			instance_free: class
		end

	rsvg_handle_get_dimensions (handle: RSVG_HANDLE_STRUCT_API; dimension_data: RSVG_DIMENSION_DATA_STRUCT_API) 
		do
			c_rsvg_handle_get_dimensions (handle.item, dimension_data.item)
		ensure
			instance_free: class
		end

	rsvg_handle_get_dimensions_sub (handle: RSVG_HANDLE_STRUCT_API; dimension_data: RSVG_DIMENSION_DATA_STRUCT_API; id: STRING_8): INTEGER 
		local
			id_c_string: C_STRING
		do
			create id_c_string.make (id)
			Result := c_rsvg_handle_get_dimensions_sub (handle.item, dimension_data.item, id_c_string.item)
		ensure
			instance_free: class
		end

	rsvg_handle_get_position_sub (handle: RSVG_HANDLE_STRUCT_API; position_data: RSVG_POSITION_DATA_STRUCT_API; id: STRING_8): INTEGER 
		local
			id_c_string: C_STRING
		do
			create id_c_string.make (id)
			Result := c_rsvg_handle_get_position_sub (handle.item, position_data.item, id_c_string.item)
		ensure
			instance_free: class
		end

	rsvg_handle_has_sub (handle: RSVG_HANDLE_STRUCT_API; id: STRING_8): INTEGER 
		local
			id_c_string: C_STRING
		do
			create id_c_string.make (id)
			Result := c_rsvg_handle_has_sub (handle.item, id_c_string.item)
		ensure
			instance_free: class
		end

	rsvg_handle_get_intrinsic_dimensions (handle: RSVG_HANDLE_STRUCT_API; out_has_width: POINTER; out_width: RSVG_LENGTH_STRUCT_API; out_has_height: POINTER; out_height: RSVG_LENGTH_STRUCT_API; out_has_viewbox: POINTER; out_viewbox: RSVG_RECTANGLE_STRUCT_API) 
		do
			c_rsvg_handle_get_intrinsic_dimensions (handle.item, out_has_width, out_width.item, out_has_height, out_height.item, out_has_viewbox, out_viewbox.item)
		ensure
			instance_free: class
		end

	rsvg_handle_flags_get_type: INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_flags_get_type ();
			]"
		end

	rsvg_handle_new_with_flags (flags: INTEGER): detachable RSVG_HANDLE_STRUCT_API 
		do
			if attached c_rsvg_handle_new_with_flags (flags) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	rsvg_handle_set_base_gfile (handle: RSVG_HANDLE_STRUCT_API; base_file: GFILE_STRUCT_API) 
		do
			c_rsvg_handle_set_base_gfile (handle.item, base_file.item)
		ensure
			instance_free: class
		end

	rsvg_handle_read_stream_sync (handle: RSVG_HANDLE_STRUCT_API; stream: GINPUT_STREAM_STRUCT_API; cancellable: GCANCELLABLE_STRUCT_API; error: GERROR_STRUCT_API): INTEGER 
		do
			Result := c_rsvg_handle_read_stream_sync (handle.item, stream.item, cancellable.item, error.item)
		ensure
			instance_free: class
		end

	rsvg_handle_new_from_gfile_sync (file: GFILE_STRUCT_API; flags: INTEGER; cancellable: GCANCELLABLE_STRUCT_API; error: GERROR_STRUCT_API): detachable RSVG_HANDLE_STRUCT_API 
		do
			if attached c_rsvg_handle_new_from_gfile_sync (file.item, flags, cancellable.item, error.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	rsvg_handle_new_from_stream_sync (input_stream: GINPUT_STREAM_STRUCT_API; base_file: GFILE_STRUCT_API; flags: INTEGER; cancellable: GCANCELLABLE_STRUCT_API; error: GERROR_STRUCT_API): detachable RSVG_HANDLE_STRUCT_API 
		do
			if attached c_rsvg_handle_new_from_stream_sync (input_stream.item, base_file.item, flags, cancellable.item, error.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	rsvg_handle_new_from_data (data: STRING_8; data_len: INTEGER; error: GERROR_STRUCT_API): detachable RSVG_HANDLE_STRUCT_API 
		local
			data_c_string: C_STRING
		do
			create data_c_string.make (data)
			if attached c_rsvg_handle_new_from_data (data_c_string.item, data_len, error.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	rsvg_handle_new_from_file (filename: STRING_8; error: GERROR_STRUCT_API): detachable RSVG_HANDLE_STRUCT_API 
		local
			filename_c_string: C_STRING
		do
			create filename_c_string.make (filename)
			if attached c_rsvg_handle_new_from_file (filename_c_string.item, error.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	rsvg_handle_set_stylesheet (handle: RSVG_HANDLE_STRUCT_API; css: STRING_8; css_len: INTEGER; error: GERROR_STRUCT_API): INTEGER 
		local
			css_c_string: C_STRING
		do
			create css_c_string.make (css)
			Result := c_rsvg_handle_set_stylesheet (handle.item, css_c_string.item, css_len, error.item)
		ensure
			instance_free: class
		end

	rsvg_init
		external
			"C inline use <rsvg.h>"
		alias
			"[
				rsvg_init ();
			]"
		end

	rsvg_term
		external
			"C inline use <rsvg.h>"
		alias
			"[
				rsvg_term ();
			]"
		end

	rsvg_handle_free (handle: RSVG_HANDLE_STRUCT_API) 
		do
			c_rsvg_handle_free (handle.item)
		ensure
			instance_free: class
		end

	rsvg_handle_set_size_callback (handle: RSVG_HANDLE_STRUCT_API; size_func: POINTER; user_data: POINTER; user_data_destroy: POINTER) 
		do
			c_rsvg_handle_set_size_callback (handle.item, size_func, user_data, user_data_destroy)
		ensure
			instance_free: class
		end

	rsvg_pixbuf_from_file (filename: STRING_8; error: GERROR_STRUCT_API): detachable GDK_PIXBUF_STRUCT_API 
		local
			filename_c_string: C_STRING
		do
			create filename_c_string.make (filename)
			if attached c_rsvg_pixbuf_from_file (filename_c_string.item, error.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	rsvg_pixbuf_from_file_at_zoom (filename: STRING_8; x_zoom: REAL_64; y_zoom: REAL_64; error: GERROR_STRUCT_API): detachable GDK_PIXBUF_STRUCT_API 
		local
			filename_c_string: C_STRING
		do
			create filename_c_string.make (filename)
			if attached c_rsvg_pixbuf_from_file_at_zoom (filename_c_string.item, x_zoom, y_zoom, error.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	rsvg_pixbuf_from_file_at_size (filename: STRING_8; width: INTEGER; height: INTEGER; error: GERROR_STRUCT_API): detachable GDK_PIXBUF_STRUCT_API 
		local
			filename_c_string: C_STRING
		do
			create filename_c_string.make (filename)
			if attached c_rsvg_pixbuf_from_file_at_size (filename_c_string.item, width, height, error.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	rsvg_pixbuf_from_file_at_max_size (filename: STRING_8; max_width: INTEGER; max_height: INTEGER; error: GERROR_STRUCT_API): detachable GDK_PIXBUF_STRUCT_API 
		local
			filename_c_string: C_STRING
		do
			create filename_c_string.make (filename)
			if attached c_rsvg_pixbuf_from_file_at_max_size (filename_c_string.item, max_width, max_height, error.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	rsvg_pixbuf_from_file_at_zoom_with_max (filename: STRING_8; x_zoom: REAL_64; y_zoom: REAL_64; max_width: INTEGER; max_height: INTEGER; error: GERROR_STRUCT_API): detachable GDK_PIXBUF_STRUCT_API 
		local
			filename_c_string: C_STRING
		do
			create filename_c_string.make (filename)
			if attached c_rsvg_pixbuf_from_file_at_zoom_with_max (filename_c_string.item, x_zoom, y_zoom, max_width, max_height, error.item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		ensure
			instance_free: class
		end

	rsvg_handle_get_title (handle: RSVG_HANDLE_STRUCT_API): POINTER 
		do
			Result := c_rsvg_handle_get_title (handle.item)
		ensure
			instance_free: class
		end

	rsvg_handle_get_desc (handle: RSVG_HANDLE_STRUCT_API): POINTER 
		do
			Result := c_rsvg_handle_get_desc (handle.item)
		ensure
			instance_free: class
		end

	rsvg_handle_get_metadata (handle: RSVG_HANDLE_STRUCT_API): POINTER 
		do
			Result := c_rsvg_handle_get_metadata (handle.item)
		ensure
			instance_free: class
		end

feature -- Externals

	c_rsvg_handle_set_dpi (handle: POINTER; dpi: REAL_64)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				rsvg_handle_set_dpi ((RsvgHandle*)$handle, (double)$dpi);
			]"
		end

	c_rsvg_handle_set_dpi_x_y (handle: POINTER; dpi_x: REAL_64; dpi_y: REAL_64)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				rsvg_handle_set_dpi_x_y ((RsvgHandle*)$handle, (double)$dpi_x, (double)$dpi_y);
			]"
		end

	c_rsvg_handle_new: POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_new ();
			]"
		end

	c_rsvg_handle_write (handle: POINTER; buf: POINTER; count: INTEGER; error: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_write ((RsvgHandle*)$handle, (guchar const*)$buf, (gsize)$count, (GError**)$error);
			]"
		end

	c_rsvg_handle_close (handle: POINTER; error: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_close ((RsvgHandle*)$handle, (GError**)$error);
			]"
		end

	c_rsvg_handle_get_pixbuf (handle: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_get_pixbuf ((RsvgHandle*)$handle);
			]"
		end

	c_rsvg_handle_get_pixbuf_sub (handle: POINTER; id: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_get_pixbuf_sub ((RsvgHandle*)$handle, (char const*)$id);
			]"
		end

	c_rsvg_handle_get_base_uri (handle: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_get_base_uri ((RsvgHandle*)$handle);
			]"
		end

	c_rsvg_handle_set_base_uri (handle: POINTER; base_uri: POINTER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				rsvg_handle_set_base_uri ((RsvgHandle*)$handle, (char const*)$base_uri);
			]"
		end

	c_rsvg_handle_get_dimensions (handle: POINTER; dimension_data: POINTER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				rsvg_handle_get_dimensions ((RsvgHandle*)$handle, (RsvgDimensionData*)$dimension_data);
			]"
		end

	c_rsvg_handle_get_dimensions_sub (handle: POINTER; dimension_data: POINTER; id: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_get_dimensions_sub ((RsvgHandle*)$handle, (RsvgDimensionData*)$dimension_data, (char const*)$id);
			]"
		end

	c_rsvg_handle_get_position_sub (handle: POINTER; position_data: POINTER; id: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_get_position_sub ((RsvgHandle*)$handle, (RsvgPositionData*)$position_data, (char const*)$id);
			]"
		end

	c_rsvg_handle_has_sub (handle: POINTER; id: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_has_sub ((RsvgHandle*)$handle, (char const*)$id);
			]"
		end

	c_rsvg_handle_get_intrinsic_dimensions (handle: POINTER; out_has_width: POINTER; out_width: POINTER; out_has_height: POINTER; out_height: POINTER; out_has_viewbox: POINTER; out_viewbox: POINTER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				rsvg_handle_get_intrinsic_dimensions ((RsvgHandle*)$handle, (gboolean*)$out_has_width, (RsvgLength*)$out_width, (gboolean*)$out_has_height, (RsvgLength*)$out_height, (gboolean*)$out_has_viewbox, (RsvgRectangle*)$out_viewbox);
			]"
		end

	c_rsvg_handle_new_with_flags (flags: INTEGER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_new_with_flags ((RsvgHandleFlags)$flags);
			]"
		end

	c_rsvg_handle_set_base_gfile (handle: POINTER; base_file: POINTER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				rsvg_handle_set_base_gfile ((RsvgHandle*)$handle, (GFile*)$base_file);
			]"
		end

	c_rsvg_handle_read_stream_sync (handle: POINTER; stream: POINTER; cancellable: POINTER; error: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_read_stream_sync ((RsvgHandle*)$handle, (GInputStream*)$stream, (GCancellable*)$cancellable, (GError**)$error);
			]"
		end

	c_rsvg_handle_new_from_gfile_sync (file: POINTER; flags: INTEGER; cancellable: POINTER; error: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_new_from_gfile_sync ((GFile*)$file, (RsvgHandleFlags)$flags, (GCancellable*)$cancellable, (GError**)$error);
			]"
		end

	c_rsvg_handle_new_from_stream_sync (input_stream: POINTER; base_file: POINTER; flags: INTEGER; cancellable: POINTER; error: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_new_from_stream_sync ((GInputStream*)$input_stream, (GFile*)$base_file, (RsvgHandleFlags)$flags, (GCancellable*)$cancellable, (GError**)$error);
			]"
		end

	c_rsvg_handle_new_from_data (data: POINTER; data_len: INTEGER; error: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_new_from_data ((guint8 const*)$data, (gsize)$data_len, (GError**)$error);
			]"
		end

	c_rsvg_handle_new_from_file (filename: POINTER; error: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_new_from_file ((gchar const*)$filename, (GError**)$error);
			]"
		end

	c_rsvg_handle_set_stylesheet (handle: POINTER; css: POINTER; css_len: INTEGER; error: POINTER): INTEGER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_set_stylesheet ((RsvgHandle*)$handle, (guint8 const*)$css, (gsize)$css_len, (GError**)$error);
			]"
		end

	c_rsvg_handle_free (handle: POINTER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				rsvg_handle_free ((RsvgHandle*)$handle);
			]"
		end

	c_rsvg_handle_set_size_callback (handle: POINTER; size_func: POINTER; user_data: POINTER; user_data_destroy: POINTER)
		external
			"C inline use <rsvg.h>"
		alias
			"[
				rsvg_handle_set_size_callback ((RsvgHandle*)$handle, (RsvgSizeFunc)$size_func, (gpointer)$user_data, (GDestroyNotify)$user_data_destroy);
			]"
		end

	c_rsvg_pixbuf_from_file (filename: POINTER; error: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_pixbuf_from_file ((gchar const*)$filename, (GError**)$error);
			]"
		end

	c_rsvg_pixbuf_from_file_at_zoom (filename: POINTER; x_zoom: REAL_64; y_zoom: REAL_64; error: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_pixbuf_from_file_at_zoom ((gchar const*)$filename, (double)$x_zoom, (double)$y_zoom, (GError**)$error);
			]"
		end

	c_rsvg_pixbuf_from_file_at_size (filename: POINTER; width: INTEGER; height: INTEGER; error: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_pixbuf_from_file_at_size ((gchar const*)$filename, (gint)$width, (gint)$height, (GError**)$error);
			]"
		end

	c_rsvg_pixbuf_from_file_at_max_size (filename: POINTER; max_width: INTEGER; max_height: INTEGER; error: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_pixbuf_from_file_at_max_size ((gchar const*)$filename, (gint)$max_width, (gint)$max_height, (GError**)$error);
			]"
		end

	c_rsvg_pixbuf_from_file_at_zoom_with_max (filename: POINTER; x_zoom: REAL_64; y_zoom: REAL_64; max_width: INTEGER; max_height: INTEGER; error: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_pixbuf_from_file_at_zoom_with_max ((gchar const*)$filename, (double)$x_zoom, (double)$y_zoom, (gint)$max_width, (gint)$max_height, (GError**)$error);
			]"
		end

	c_rsvg_handle_get_title (handle: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_get_title ((RsvgHandle*)$handle);
			]"
		end

	c_rsvg_handle_get_desc (handle: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_get_desc ((RsvgHandle*)$handle);
			]"
		end

	c_rsvg_handle_get_metadata (handle: POINTER): POINTER
		external
			"C inline use <rsvg.h>"
		alias
			"[
				return rsvg_handle_get_metadata ((RsvgHandle*)$handle);
			]"
		end

feature -- Externals Address

end
